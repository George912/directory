<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:jee="http://www.springframework.org/schema/jee"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                    http://www.springframework.org/schema/beans/spring-beans.xsd
                                    http://www.springframework.org/schema/security
                                    http://www.springframework.org/schema/security/spring-security.xsd
                                    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

    <jee:jndi-lookup id="dbDataSource" expected-type="javax.sql.DataSource" jndi-name="java:comp/env/jdbc/AppDB"/>

    <http auto-config="true" pattern="/service/**" create-session="stateless" use-expressions="true">
        <intercept-url pattern=' /**' access="hasRole('ROLE_USER')" />
        <csrf disabled="true" />
        <http-basic />
    </http>

    <authentication-manager erase-credentials="false">
        <authentication-provider>
            <jdbc-user-service data-source-ref="dbDataSource"
                users-by-username-query="select login as username, password, enabled
                                            from users where login=?"
                authorities-by-username-query="select u.login as username, ur.role as role
	                                            from users u
                                                join user_roles ur on u.id = ur.user_id
                                                    where u.login = ?" />
        </authentication-provider>
    </authentication-manager>
</beans:beans>